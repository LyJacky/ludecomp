{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/lu-decomposition/lu-decomposition.component.ts","webpack:///src/app/lu-decomposition/lu-decomposition.component.html","webpack:///src/app/service/lu-decomp-service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","MatrixFraction","data","dim","res","i","push","j","clone","MatrixNumber","LuDecompositionComponent","dimension","results","changeDimension","testData","line","col","sub","unsubscribe","luDecompService","event","subscribe","eventData","console","log","compute","item","inputParameterSubmited","addParameter","inputParameter","value","index","computeMat","Fractions","num","denom","numerator","denominator","divFrac","_divisionNoChange","multFrac","_multiplyingNoChange","subFrac","_subtracting","addFrac","_addingNoChange","test","Math","abs","temp1","temp2","result","reduce","temp","DisplayItem","action","msg","LuDecompService","input","fractionZero","parameters","lin","fractionInput","initDoubleArray","fractionLower","fractionProduct","fractionCopy","initArray","convert","emit","lower","multiplier","arr1","arrcopy","numrow","arrsize","numbers","num2","text","integerPlaces","indexOf","decimalPlaces","length","pow","upper","testing","k","multiplyingNoChange","addingNoChange","p","oldColPosition","divisionNoChange","undefined","copyArray","subtracting","multiplyTwoMatrix","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'lu-decomposition-client';\n}\n","<app-lu-decomposition></app-lu-decomposition>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LuDecompositionComponent } from './lu-decomposition/lu-decomposition.component';\nimport {FormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LuDecompositionComponent\n  ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        FormsModule,\n      HttpClientModule\n    ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, OnInit} from '@angular/core';\nimport {DisplayItem, LuDecompService} from '../service/lu-decomp-service';\nimport {Subscription} from 'rxjs';\n\nexport class MatrixFraction {\n    data: Fractions[][];\n    dim: number;\n    constructor(data: Fractions[][], dim: number) {\n        this.data = data;\n        this.dim = dim;\n    }\n\n    public clone(): MatrixFraction {\n        const res = [];\n        for (let i = 0; i < this.dim; i++) {\n            res.push([]);\n            for (let j = 0; j < this.dim; j++) {\n                res[i].push(this.data[i][j].clone());\n            }\n        }\n        return new MatrixFraction(res, this.dim);\n    }\n}\n\nexport class MatrixNumber {\n    data: number[][];\n    dim: number;\n    constructor(data: number[][], dim: number) {\n        this.data = data;\n        this.dim = dim;\n    }\n\n}\n\n@Component({\n    selector: 'app-lu-decomposition',\n    templateUrl: './lu-decomposition.component.html',\n    styleUrls: ['./lu-decomposition.component.scss']\n})\nexport class LuDecompositionComponent implements OnInit {\n\n    dimension = 3;\n    data: MatrixNumber = new MatrixNumber([], 0);\n    results: DisplayItem[] = [];\n    luDecompService: LuDecompService;\n    private sub: Subscription;\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n        this.changeDimension();\n        this.testData();\n    }\n\n    changeDimension() {\n        this.data.data = [];\n        for (let i = 0; i < this.dimension; i++) {\n            const line = [];\n            for (let col = 0; col < this.dimension; col++) {\n                line.push(0);\n            }\n            this.data.data.push(line);\n        }\n    }\n\n    testData() {\n        this.data.data = [\n            [20, 5, 9],\n            [16, 4, 7],\n            [4, 1, 3]\n        ];\n    }\n\n    computeMat() {\n        this.results = [];\n        if (this.sub) {\n            this.sub.unsubscribe();\n        }\n        this.luDecompService = new LuDecompService(this.dimension, this.data);\n        this.sub = this.luDecompService.event.subscribe(eventData => {\n            console.log(eventData);\n            this.results.push(new DisplayItem(eventData));\n        });\n        this.luDecompService.compute();\n    }\n\n    changeInputParameter(item: DisplayItem) {\n        item.inputParameterSubmited = true;\n        this.luDecompService.addParameter(item.inputParameter);\n        const value: any = item.value;\n        this.luDecompService.compute(value);\n    }\n\n    indexTrackerLin(index: number, value: any) {\n        return index;\n    }\n    indexTrackerCol(index: number, value: any) {\n        return index;\n    }\n}\n\n\nexport class Fractions {\n    // a class is basically the blueprint of MY object that i plan to create\n    numerator: number;\n    denominator: number;\n\n    constructor(num: number, denom: number) {\n        this.numerator = num;\n        this.denominator = denom;\n    }\n\n    public static reduce(test: Fractions): Fractions {\n        // test is the fraction// do the 0 case\n        for (let i = Math.abs(test.denominator); i >= 1; i--) {\n            if (test.numerator % i === 0 && test.denominator % i === 0) {\n                test.numerator = test.numerator / i;\n                test.denominator = test.denominator / i;\n                break;\n            }\n        }\n        if (test.denominator < 0) {\n            test.numerator = test.numerator * -1;\n            test.denominator = test.denominator * -1;\n        }\n        return test;\n    }\n\n// from fracitons to that is the typescript conversion\n    public static _addingNoChange(test: Fractions, addFrac: Fractions): Fractions {\n        let temp1: number;\n        let temp2: number;\n        const result: Fractions = new Fractions(0, 1); // not sure if right\n        if (test.denominator === addFrac.denominator) {\n            result.numerator = test.numerator + addFrac.numerator;\n            result.denominator = test.denominator;\n        } else {\n            temp1 = test.denominator;\n            temp2 = addFrac.denominator;\n            test.denominator = temp1 * temp2;\n            addFrac.denominator = temp1 * temp2;\n            test.numerator = temp2 * test.numerator;\n            addFrac.numerator = temp1 * addFrac.numerator;\n            test.numerator = test.numerator + addFrac.numerator;\n            result.numerator = test.numerator;\n            result.denominator = test.denominator;\n        }\n        Fractions.reduce(result);\n        return result;\n    }\n\n    public static _subtracting(test: Fractions, subFrac: Fractions): Fractions {\n        let temp: number;\n        let temp2: number;\n        if (test.denominator === subFrac.denominator) {\n            test.numerator = test.numerator - subFrac.numerator;\n        } else {\n            temp = test.denominator;\n            temp2 = subFrac.denominator;\n            test.denominator = temp * temp2;\n            subFrac.denominator = temp * temp2;\n            test.numerator = temp2 * test.numerator;\n            subFrac.numerator = temp * subFrac.numerator;\n            test.numerator = test.numerator - subFrac.numerator;\n        }\n        Fractions.reduce(test);\n        return test;\n    }\n    public static _multiplyingNoChange(test: Fractions, multFrac: Fractions): Fractions {\n        const results: Fractions = new Fractions(0, 1);\n        results.numerator = test.numerator * multFrac.numerator;\n        results.denominator = test.denominator * multFrac.denominator;\n        Fractions.reduce(results);\n        return results;\n    }\n    public static _divisionNoChange(test: Fractions, divFrac: Fractions): Fractions {\n        const result: Fractions = new Fractions(0, 1);\n        result.numerator = test.numerator * divFrac.denominator;\n        result.denominator = test.denominator * divFrac.numerator;\n        Fractions.reduce(result);\n        return result;\n    }\n\n    public divisionNoChange(divFrac: Fractions): Fractions {\n        return Fractions._divisionNoChange(this, divFrac);\n    }\n    public multiplyingNoChange(multFrac: Fractions): Fractions {\n        return Fractions._multiplyingNoChange(this, multFrac);\n    }\n    public subtracting(subFrac: Fractions): Fractions {\n        return Fractions._subtracting(this, subFrac);\n    }\n    public addingNoChange(addFrac: Fractions): Fractions {\n        return Fractions._addingNoChange(this, addFrac);\n    }\n    public clone(): Fractions {\n        return new Fractions(this.numerator, this.denominator);\n    }\n}\n","<div>\n  <input type=\"number\" [(ngModel)]=\"dimension\" (ngModelChange)=\"changeDimension()\"/>\n</div>\n\n<div>\n  <table>\n    <tr *ngFor=\"let line of data.data; let idxLine = index; trackBy:indexTrackerLin\">\n      <td *ngFor=\"let col of line; let idxCol = index; trackBy:indexTrackerCol\">\n        <input type=\"number\" [(ngModel)]=\"data.data[idxLine][idxCol]\"/>\n      </td>\n    </tr>\n  </table>\n</div>\n\n<button (click)=\"computeMat()\">\n  Compute\n</button>\n\n<h5>Result</h5>\n\n<div *ngFor=\"let item of results\">\n  <ng-container *ngIf=\"item.action == 'RequestParamForInfCase'\">\n    <ng-container *ngTemplateOutlet=\"askParameter, context: {item: item}\"></ng-container>\n  </ng-container>\n  <ng-container *ngIf=\"item.action == 'DisplayStep'\">\n    <ng-container *ngIf=\"item.isMatrix()\">\n      <ng-container *ngTemplateOutlet=\"displayMatrix, context: {item: item}\"></ng-container>\n    </ng-container>\n    <ng-container *ngIf=\"item.isFractions()\">\n      <ng-container *ngTemplateOutlet=\"displayFractions, context: {item: item}\"></ng-container>\n    </ng-container>\n    <ng-container *ngIf=\"item.isNumber()\">\n      <ng-container *ngTemplateOutlet=\"displayNumber, context: {item: item}\"></ng-container>\n    </ng-container>\n  </ng-container>\n  <ng-container *ngIf=\"item.action == 'StopNoSolution'\">\n    <ng-container *ngTemplateOutlet=\"noSolution, context: {item: item}\"></ng-container>\n  </ng-container>\n\n</div>\n\n\n<ng-template #askParameter let-item=\"item\">\n  <div>\n    {{item.msg}}\n  </div>\n  <div>\n    <input type=\"number\" [(ngModel)]=\"item.inputParameter\" [disabled]=\"item.inputParameterSubmited\"/>\n  </div>\n  <button (click)=\"changeInputParameter(item)\" *ngIf=\"!item.inputParameterSubmited && item.inputParameter\">\n    Submit\n  </button>\n</ng-template>\n\n<ng-template #displayMatrix let-item=\"item\">\n  <div>\n    {{item.msg}}\n  </div>\n  <table>\n    <tr *ngFor=\"let line of item.value.data; let idxLine = index\">\n      <td *ngFor=\"let col of line; let idxCol = index\">\n        {{item.value.data[idxLine][idxCol].numerator}}\n        <ng-container *ngIf=\"item.value.data[idxLine][idxCol].denominator != 1.0\">\n        / {{item.value.data[idxLine][idxCol].denominator}}\n        </ng-container>\n      </td>\n    </tr>\n  </table>\n</ng-template>\n\n<ng-template #displayNumber let-item=\"item\">\n  <div>\n    {{item.msg}}\n  </div>\n  <div>\n    {{item.value}}\n  </div>\n\n</ng-template>\n\n<ng-template #displayFractions let-item=\"item\">\n  <div>\n    {{item.msg}}\n  </div>\n  <div>\n    {{item.value.numerator}}\n    <ng-container *ngIf=\"item.value.denominator != 1\">\n      / {{item.value.denominator}}\n    </ng-container>\n  </div>\n</ng-template>\n\n<ng-template #noSolution let-item=\"item\">\n  <div>\n    {{item.msg}}\n  </div>\n</ng-template>\n","import {Fractions, MatrixFraction, MatrixNumber} from '../lu-decomposition/lu-decomposition.component';\nimport {Subject} from 'rxjs';\nimport {EventEmitter} from '@angular/core';\n\ntype EventData = {\n    action: 'RequestParamForInfCase' | 'DisplayStep' | 'StopNoSolution', msg: string, value: MatrixFraction | number | Fractions\n};\n\nexport class DisplayItem {\n    action: 'RequestParamForInfCase' | 'DisplayStep' | 'StopNoSolution';\n    msg: string;\n    value: MatrixFraction | number | Fractions;\n    inputParameter: number;\n    inputParameterSubmited = false;\n\n    constructor(value: EventData) {\n        this.action = value.action;\n        this.msg = value.msg;\n        if (value.value instanceof MatrixFraction) {\n            this.value = value.value.clone();\n        } else if (value.value instanceof MatrixFraction) {\n            this.value = value.value.clone();\n        } else {\n            this.value = value.value;\n        }\n    }\n    isMatrix() {\n        return this.value instanceof MatrixFraction;\n    }\n\n    isFractions() {\n        return this.value instanceof Fractions;\n    }\n\n    isNumber() {\n        return typeof this.value === 'number';\n    }\n}\n\nexport class LuDecompService {\n\n    event: EventEmitter<EventData> = new EventEmitter<EventData>();\n\n\n    fractionZero: Fractions = new Fractions(0, 1);\n    fractionInput: Fractions[][];\n    fractionLower: Fractions[][];\n    fractionProduct: Fractions[][];\n    fractionCopy: Fractions[];\n    parameters: number[] = [];\n    index = 0;\n    private multiplier: Fractions;\n    private lin = 0;\n    private col = 0;\n\n    public copyArray(dim: number, arr1: Fractions[][], arrcopy: Fractions[], numrow: number): Fractions[] {\n        for (let i = 0; i < dim; i++) {\n            arrcopy[i] = new Fractions(arr1[numrow][i].numerator, arr1[numrow][i].denominator);\n        }\n        return arrcopy;\n    }\n\n    public convert(arrsize: number, test: Fractions[][], numbers: number[][]): Fractions[][] {\n        // make this do teh entire array and return an array\n        let num2: number;\n        let text = '';\n        for (let i = 0; i < arrsize; i++) {\n            for (let j = 0; j < arrsize; j++) {\n                if (numbers[i][j] % 1 !== 0) {\n                    text = Math.abs(numbers[i][j]) + '';\n                    const integerPlaces: number = text.indexOf('.');\n                    const decimalPlaces: number = text.length - integerPlaces - 1;\n                    numbers[i][j] = numbers[i][j] * (Math.pow(10, decimalPlaces));\n                    num2 = Math.pow(10, decimalPlaces);\n                    test[i][j] = new Fractions(numbers[i][j], num2);\n                    Fractions.reduce(test[i][j]);\n                } else {\n                    test[i][j] = new Fractions(numbers[i][j], 1);\n                }\n            }\n        }\n        return test;\n    }\n\n    public multiplyTwoMatrix(\n        dim: number,\n        lower: Fractions[][],\n        upper: Fractions[][],\n        test: Fractions[][]): Fractions[][] {\n\n        let testing: Fractions = new Fractions(0, 1);\n        for (let i = 0; i < dim; i++) {\n            for (let j = 0; j < dim; j++) {\n                test[i][j] = new Fractions(0, 1);\n                for (let k = 0; k < dim; k++) {\n                    testing = lower[i][k].multiplyingNoChange(upper[k][j]);\n                    test[i][j] = test[i][j].addingNoChange(testing);\n\n                }\n            }\n        }\n        return test;\n    }\n\n\n    constructor(private dim: number, private input: MatrixNumber) {\n        this.fractionZero = new Fractions(0, 1);\n        this.fractionInput = this.initDoubleArray(dim);\n        this.fractionLower = this.initDoubleArray(dim);\n        this.fractionProduct = this.initDoubleArray(dim);\n        this.fractionCopy = this.initArray(dim); // takes one row from the row to perform gaussian\n        this.parameters = [];\n        this.index = 0;\n\n        this.fractionInput = this.convert(this.dim, this.fractionInput, this.input.data);\n        // made fraction form of array c\n        this.event.emit({\n            action: 'DisplayStep',\n            msg: 'Fraction Upper',\n            value: new MatrixFraction(this.fractionInput, this.dim)\n        });\n        const lower: number[][] = this.initDoubleArray(this.dim, 0);\n        for (let i = 0; i < dim; i++) {\n            lower[i][i] = 1;\n        }\n\n        this.fractionLower = this.convert(this.dim, this.fractionLower, lower); // making lower fraction\n        this.multiplier = new Fractions(1, 1);\n    }\n\n    addParameter(p: number) {\n        this.parameters.push(p);\n    }\n\n    public compute(oldColPosition = 1) {\n        // adjusting A(1,1), A(2,1) in the matrix L and U using gaussian\n        for (; this.lin < (this.dim - 1); this.lin++) {// a represents column\n            for (this.col = oldColPosition; this.col < (this.dim - this.lin); this.col++) {\n                if (this.fractionInput[this.lin][this.lin].numerator !== this.fractionZero.numerator) {\n                    this.multiplier = this.fractionInput[this.col + this.lin][this.lin]\n                        .divisionNoChange(this.fractionInput[this.lin][this.lin]);\n                    this.event.emit({\n                        action: 'DisplayStep',\n                        msg: 'Multiplier',\n                        value: this.multiplier\n                    });\n                    this.fractionLower[this.col + this.lin][this.lin] =\n                        this.fractionLower[this.col + this.lin][this.lin].addingNoChange(this.multiplier);\n                    this.event.emit({\n                        action: 'DisplayStep',\n                        msg: 'Fraction Lower',\n                        value: new MatrixFraction(this.fractionLower, this.dim)\n                    });\n\n                } else {\n                    if (this.fractionInput[this.lin][this.lin].numerator === this.fractionZero.numerator\n                        && this.fractionInput[this.col + this.lin][this.lin].numerator === this.fractionZero.numerator) {\n                        // System.out.println(\"please pick a parameterCompute for the matrix since there is infinite solutions\");\n                        //  parameterCompute = input.nextInt();\n                        if (this.parameters[this.index] === undefined) {\n                            this.event.emit({\n                                action: 'RequestParamForInfCase',\n                                msg: 'Please Input Parameter',\n                                value: this.col\n                            });\n                            return;\n                        }\n                        this.multiplier.numerator = this.parameters[this.index];\n                        this.index++;\n                        this.multiplier.denominator = 1;\n                        this.event.emit({\n                            action: 'DisplayStep',\n                            msg: 'Multiplier',\n                            value: this.multiplier\n                        });\n                        this.fractionLower[this.col + this.lin][this.lin] =\n                            this.fractionLower[this.col + this.lin][this.lin].addingNoChange(this.multiplier);\n                        this.event.emit({\n                            action: 'DisplayStep',\n                            msg: 'Fraction Lower',\n                            value: new MatrixFraction(this.fractionLower, this.dim)\n                        });\n                    } else {\n                        if (this.fractionInput[this.lin][this.lin].numerator === this.fractionZero.numerator\n                            && this.fractionInput[this.col + this.lin][this.lin].numerator !== this.fractionZero.numerator) {\n\n                            this.event.emit({\n                                action: 'StopNoSolution',\n                                msg: '',\n                                value: null\n                            });\n                            return;\n                        }\n                    }\n                }\n                this.copyArray(this.dim, this.fractionInput, this.fractionCopy, this.lin);\n                for (let j = 0; j < this.dim; j++) {\n                    this.fractionCopy[j] = this.fractionCopy[j].multiplyingNoChange(this.multiplier);\n                    // copies all the number in the row into a copy matrix which will be used in gaussian elimnination\n                }\n\n                for (let j = this.lin; j < this.dim; j++) {\n                    this.fractionInput[this.col + this.lin][j].subtracting(this.fractionCopy[j]);\n                }\n                this.event.emit({\n                    action: 'DisplayStep',\n                    msg: 'Fraction Upper',\n                    value: new MatrixFraction(this.fractionInput, this.dim)\n                });\n            }\n            // if resuming a compute, after the the resume set the column to start at 1\n            oldColPosition = 1;\n        }\n        this.event.emit({\n            action: 'DisplayStep',\n            msg: 'Fraction Upper Final',\n            value: new MatrixFraction(this.fractionInput, this.dim)\n        });\n        this.event.emit({\n            action: 'DisplayStep',\n            msg: 'Fraction Lower Final',\n            value: new MatrixFraction(this.fractionLower, this.dim)\n        });\n        this.multiplyTwoMatrix(this.dim, this.fractionLower, this.fractionInput, this.fractionProduct);\n        this.event.emit({\n            action: 'DisplayStep',\n            msg: 'Fraction Lower x Upper',\n            value: new MatrixFraction(this.fractionProduct, this.dim)\n        });\n\n\n    }\n\n    private initDoubleArray(dim: number, value: any = null): any[][] {\n        const res = [];\n        for (let i = 0; i < dim; i++) {\n            res.push([]);\n            for (let j = 0; j < dim; j++) {\n                res[i].push(value);\n            }\n        }\n        return res;\n    }\n\n    private initArray(dim: number, value: any = null): any[] {\n        const res = [];\n        for (let i = 0; i < dim; i++) {\n            res.push(value);\n        }\n        return res;\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}