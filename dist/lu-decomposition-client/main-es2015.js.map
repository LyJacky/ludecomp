{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/lu-decomposition/lu-decomposition.component.ts","./src/app/lu-decomposition/lu-decomposition.component.html","./src/app/service/lu-decomp-service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAyC;AACc;;;AAGvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAA0C;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,yBAAyB,CAAC;KACnC;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,kFAA6C;;6FDOhC,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEe;AACT;AAC0C;AAC9C;AACW;;AAgB/C,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YANF;YACL,uEAAa;YACb,oEAAgB;YAChB,0DAAW;YACb,qEAAgB;SACjB;mIAIQ,SAAS,mBAZlB,2DAAY;QACZ,qGAAwB,aAGpB,uEAAa;QACb,oEAAgB;QAChB,0DAAW;QACb,qEAAgB;6FAKT,SAAS;cAdrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,qGAAwB;iBACzB;gBACC,OAAO,EAAE;oBACL,uEAAa;oBACb,oEAAgB;oBAChB,0DAAW;oBACb,qEAAgB;iBACjB;gBACH,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACtBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AAC0B;;;;;;ICQpE,qEACE;IAAA,2EACF;IADuB,ifAAwC;IAA7D,4DACF;IAAA,4DAAK;;;;;IADkB,0DAAwC;IAAxC,+GAAwC;;;IAFjE,qEACE;IAAA,uHACE;IAEJ,4DAAK;;;;IAHC,0DAAqE;IAArE,6EAAqE;;;IAe3E,mEAAqF;;;;IADvF,wEACE;IAAA,6JAAsE;IACxE,qEAAe;;;;;IADC,0DAAuD;IAAvD,iFAAuD;;;IAInE,mEAAsF;;;IADxF,wEACE;IAAA,4KAAuE;IACzE,qEAAe;;;;;IADC,0DAAwD;IAAxD,iFAAwD;;;IAGtE,mEAAyF;;;IAD3F,wEACE;IAAA,4KAA0E;IAC5E,qEAAe;;;;;IADC,0DAA2D;IAA3D,kFAA2D;;;IAGzE,mEAAsF;;;IADxF,wEACE;IAAA,4KAAuE;IACzE,qEAAe;;;;;IADC,0DAAwD;IAAxD,iFAAwD;;;IAR1E,wEACE;IAAA,6JACE;IAEF,6JACE;IAEF,6JACE;IAEJ,qEAAe;;;IATC,0DAAuB;IAAvB,qFAAuB;IAGvB,0DAA0B;IAA1B,wFAA0B;IAG1B,0DAAuB;IAAvB,qFAAuB;;;IAKrC,mEAAmF;;;IADrF,wEACE;IAAA,6JAAoE;IACtE,qEAAe;;;;;IADC,0DAAqD;IAArD,kFAAqD;;;IAhBvE,sEACE;IAAA,8IACE;IAEF,8IACE;IAUF,8IACE;IAGJ,4DAAM;;;IAlBU,0DAA+C;IAA/C,6GAA+C;IAG/C,0DAAwC;IAAxC,sGAAwC;IAWxC,0DAAuC;IAAvC,qGAAuC;;;IAQrD,mEAAuG;;;;IAOvG,4EACE;IADM,ybAAoC;IAC1C,mEACF;IAAA,4DAAS;;;;IATT,sJAAwF;IACxF,sEACE;IAAA,uDACF;IAAA,4DAAM;IACN,sEACE;IAAA,4EACF;IADwB,sTAAiC;IAAvD,4DACF;IAAA,4DAAM;IACN,0IACE;;;;;IARY,iFAAyE;IAErF,0DACF;IADE,wFACF;IAEwB,0DAAiC;IAAjC,4FAAiC;IAEZ,0DAA0F;IAA1F,+JAA0F;;;IAajI,wEACE;IAAA,uDACF;IAAA,qEAAe;;;;;IADb,0DACF;IADE,sIACF;;;IAJF,qEACE;IAAA,uDACA;IAAA,gKACE;IAEJ,4DAAK;;;;;IAJH,0DACA;IADA,kIACA;IAAc,0DAA2D;IAA3D,+HAA2D;;;IAH7E,qEACE;IAAA,sIACE;IAKJ,4DAAK;;;IANC,0DAA4C;IAA5C,6EAA4C;;;IALpD,sEACE;IAAA,uDACF;IAAA,4DAAM;IACN,wEACE;IAAA,iIACE;IAOJ,4DAAQ;;;IAXN,0DACF;IADE,gHACF;IAEM,0DAAyD;IAAzD,wFAAyD;;;IAgB3D,qEACE;IAAA,uDAEF;IAAA,4DAAK;;;;;IAFH,0DAEF;IAFE,kHAEF;;;IAJF,qEACE;IAAA,sIACE;IAGJ,4DAAK;;;IAJC,0DAA4C;IAA5C,6EAA4C;;;IAFpD,wEACE;IAAA,iIACE;IAKJ,4DAAQ;;;IANF,0DAAmD;IAAnD,kFAAmD;;;IAWzD,sEACE;IAAA,uDACF;IAAA,4DAAM;IACN,sEACE;IAAA,uDACF;IAAA,4DAAM;;;IAJJ,0DACF;IADE,wFACF;IAEE,0DACF;IADE,0FACF;;;IAUE,wEACE;IAAA,uDACF;IAAA,qEAAe;;;IADb,0DACF;IADE,wGACF;;;IAPF,sEACE;IAAA,uDACF;IAAA,4DAAM;IACN,sEACE;IAAA,uDACA;IAAA,sJACE;IAEJ,4DAAM;;;IAPJ,0DACF;IADE,wFACF;IAEE,0DACA;IADA,oGACA;IAAc,0DAAmC;IAAnC,iGAAmC;;;IAOnD,sEACE;IAAA,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,wFACF;;AD5GK,MAAM,cAAc;IAGvB,YAAY,IAAmB,EAAE,GAAW;QACxC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IACnB,CAAC;IAEM,KAAK;QACR,MAAM,GAAG,GAAG,EAAE,CAAC;QACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE;YAC/B,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE;gBAC/B,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;aACxC;SACJ;QACD,OAAO,IAAI,cAAc,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;IAC7C,CAAC;CACJ;AAEM,MAAM,YAAY;IAGrB,YAAY,IAAgB,EAAE,GAAW;QACrC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IACnB,CAAC;CAEJ;AACM,MAAM,YAAY;IAGrB,YAAY,IAAgB,EAAE,GAAW;QACrC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IACnB,CAAC;CAEJ;AAOM,MAAM,wBAAwB;IAQjC;QANA,cAAS,GAAG,CAAC,CAAC;QACd,SAAI,GAAiB,IAAI,YAAY,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;QAC7C,YAAO,GAAkB,EAAE,CAAC;IAK5B,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,QAAQ,EAAE,CAAC;IACpB,CAAC;IAED,eAAe;QACX,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,EAAE;YACrC,MAAM,IAAI,GAAG,EAAE,CAAC;YAChB,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,SAAS,EAAE,GAAG,EAAE,EAAE;gBAC3C,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aAChB;YACD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC7B;IACL,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG;YACb,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;YACV,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;YACV,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;SACZ,CAAC;IACN,CAAC;IAED,UAAU;QACN,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,IAAI,CAAC,GAAG,EAAE;YACV,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;SAC1B;QACD,IAAI,CAAC,eAAe,GAAG,IAAI,0EAAe,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QACtE,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE;YACxD,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YACvB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,sEAAW,CAAC,SAAS,CAAC,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;IACnC,CAAC;IAED,oBAAoB,CAAC,IAAiB;QAClC,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;QACnC,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACvD,MAAM,KAAK,GAAQ,IAAI,CAAC,KAAK,CAAC;QAC9B,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxC,CAAC;IAED,eAAe,CAAC,KAAa,EAAE,KAAU;QACrC,OAAO,KAAK,CAAC;IACjB,CAAC;IACD,eAAe,CAAC,KAAa,EAAE,KAAU;QACrC,OAAO,KAAK,CAAC;IACjB,CAAC;;gGA5DQ,wBAAwB;wGAAxB,wBAAwB;QChDrC,sEACE;QAAA,qEAAI;QAAA,6FAAkC;QAAA,4DAAK;QAC3C,2EACF;QADuB,+LAAuB,uGAAkB,qBAAiB,IAAnC;QAA5C,4DACF;QAAA,4DAAM;QAEN,sEACE;QAAA,wEACE;QAAA,qEAAI;QAAA,2EAAgB;QAAA,4DAAK;QACzB,kHACE;QAIJ,4DAAQ;QACV,4DAAM;QAEN,4EACE;QADM,gJAAS,gBAAY,IAAC;QAC5B,sEACF;QAAA,4DAAS;QAET,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QAEf,sHACE;QAqBF,kNACE;QAYF,kNACE;QAgBF,kNAEE;QAWF,kNACE;QASF,kNACE;QAWF,kNACE;;QA5GqB,0DAAuB;QAAvB,kFAAuB;QAMtC,0DAA4E;QAA5E,kFAA4E;QAc/E,0DAA4B;QAA5B,gFAA4B;;6FD0BpB,wBAAwB;cALpC,uDAAS;eAAC;gBACP,QAAQ,EAAE,sBAAsB;gBAChC,WAAW,EAAE,mCAAmC;gBAChD,SAAS,EAAE,CAAC,mCAAmC,CAAC;aACnD;;AAiEM,MAAM,SAAS;IAKlB,YAAY,GAAW,EAAE,KAAa;QAClC,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;QACrB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC7B,CAAC;IAEM,MAAM,CAAC,MAAM,CAAC,IAAe;QAChC,uCAAuC;QACvC,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;YAClD,IAAI,IAAI,CAAC,SAAS,GAAG,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,WAAW,GAAG,CAAC,KAAK,CAAC,EAAE;gBACxD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACpC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;gBACxC,MAAM;aACT;SACJ;QACD,IAAI,IAAI,CAAC,WAAW,GAAG,CAAC,EAAE;YACtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;YACrC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;SAC5C;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAEL,sDAAsD;IAC3C,MAAM,CAAC,eAAe,CAAC,IAAe,EAAE,OAAkB;QAC7D,IAAI,KAAa,CAAC;QAClB,IAAI,KAAa,CAAC;QAClB,MAAM,MAAM,GAAc,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,oBAAoB;QACnE,IAAI,IAAI,CAAC,WAAW,KAAK,OAAO,CAAC,WAAW,EAAE;YAC1C,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;YACtD,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;SACzC;aAAM;YACH,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC;YACzB,KAAK,GAAG,OAAO,CAAC,WAAW,CAAC;YAC5B,IAAI,CAAC,WAAW,GAAG,KAAK,GAAG,KAAK,CAAC;YACjC,OAAO,CAAC,WAAW,GAAG,KAAK,GAAG,KAAK,CAAC;YACpC,IAAI,CAAC,SAAS,GAAG,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;YACxC,OAAO,CAAC,SAAS,GAAG,KAAK,GAAG,OAAO,CAAC,SAAS,CAAC;YAC9C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;YACpD,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YAClC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;SACzC;QACD,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACzB,OAAO,MAAM,CAAC;IAClB,CAAC;IAEM,MAAM,CAAC,YAAY,CAAC,IAAe,EAAE,OAAkB;QAC1D,IAAI,IAAY,CAAC;QACjB,IAAI,KAAa,CAAC;QAClB,IAAI,IAAI,CAAC,WAAW,KAAK,OAAO,CAAC,WAAW,EAAE;YAC1C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;SACvD;aAAM;YACH,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;YACxB,KAAK,GAAG,OAAO,CAAC,WAAW,CAAC;YAC5B,IAAI,CAAC,WAAW,GAAG,IAAI,GAAG,KAAK,CAAC;YAChC,OAAO,CAAC,WAAW,GAAG,IAAI,GAAG,KAAK,CAAC;YACnC,IAAI,CAAC,SAAS,GAAG,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;YACxC,OAAO,CAAC,SAAS,GAAG,IAAI,GAAG,OAAO,CAAC,SAAS,CAAC;YAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;SACvD;QACD,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACvB,OAAO,IAAI,CAAC;IAChB,CAAC;IACM,MAAM,CAAC,oBAAoB,CAAC,IAAe,EAAE,QAAmB;QACnE,MAAM,OAAO,GAAc,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC;QACxD,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,CAAC;QAC9D,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAC1B,OAAO,OAAO,CAAC;IACnB,CAAC;IACM,MAAM,CAAC,iBAAiB,CAAC,IAAe,EAAE,OAAkB;QAC/D,MAAM,MAAM,GAAc,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC9C,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,WAAW,CAAC;QACxD,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,SAAS,CAAC;QAC1D,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACzB,OAAO,MAAM,CAAC;IAClB,CAAC;IAEM,gBAAgB,CAAC,OAAkB;QACtC,OAAO,SAAS,CAAC,iBAAiB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IACtD,CAAC;IACM,mBAAmB,CAAC,QAAmB;QAC1C,OAAO,SAAS,CAAC,oBAAoB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IAC1D,CAAC;IACM,WAAW,CAAC,OAAkB;QACjC,OAAO,SAAS,CAAC,YAAY,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IACjD,CAAC;IACM,cAAc,CAAC,OAAkB;QACpC,OAAO,SAAS,CAAC,eAAe,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IACpD,CAAC;IACM,KAAK;QACR,OAAO,IAAI,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IAC3D,CAAC;CACJ;;;;;;;;;;;;;AEhND;AAAA;AAAA;AAAA;AAAA;AAAqH;AAC1E;AASpC,MAAM,WAAW;IAQpB,YAAY,KAAgB;QAH5B,2BAAsB,GAAG,KAAK,CAAC;QAC/B,eAAU,GAAkB,IAAI,CAAC;QAG7B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;QAC3B,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;QACrB,IAAI,KAAK,CAAC,KAAK,YAAY,2FAAc,EAAE;YACvC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;SACpC;aAAM,IAAI,KAAK,CAAC,KAAK,YAAY,2FAAc,EAAE;YAC9C,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;SACpC;aAAM;YACH,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;SAC5B;QACD,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC;IACvC,CAAC;IAED,QAAQ;QACJ,OAAO,IAAI,CAAC,KAAK,YAAY,2FAAc,CAAC;IAChD,CAAC;IAED,WAAW;QACP,OAAO,IAAI,CAAC,KAAK,YAAY,sFAAS,CAAC;IAC3C,CAAC;IAED,QAAQ;QACJ,OAAO,OAAO,IAAI,CAAC,KAAK,KAAK,QAAQ,CAAC;IAC1C,CAAC;CACJ;AAEM,MAAM,eAAe;IAiExB,YAAoB,GAAW,EAAU,KAAmB;QAAxC,QAAG,GAAH,GAAG,CAAQ;QAAU,UAAK,GAAL,KAAK,CAAc;QA/D5D,UAAK,GAA4B,IAAI,0DAAY,EAAa,CAAC;QAG/D,iBAAY,GAAc,IAAI,sFAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAK9C,eAAU,GAAa,EAAE,CAAC;QAC1B,UAAK,GAAG,CAAC,CAAC;QAEF,QAAG,GAAG,CAAC,CAAC;QACR,QAAG,GAAG,CAAC,CAAC;QAoDZ,IAAI,CAAC,YAAY,GAAG,IAAI,sFAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACxC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;QAC/C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;QAC/C,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;QACjD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,iDAAiD;QAC1F,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QAEf,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACjF,gCAAgC;QAChC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;YACZ,MAAM,EAAE,aAAa;YACrB,GAAG,EAAE,QAAQ;YACb,KAAK,EAAE,IAAI,2FAAc,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,GAAG,CAAC;SAC1D,CAAC,CAAC;QACH,MAAM,KAAK,GAAe,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QAC5D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YAC1B,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SACnB;QAED,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC,CAAC,wBAAwB;QAChG,IAAI,CAAC,UAAU,GAAG,IAAI,sFAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC1C,CAAC;IAxEM,SAAS,CAAC,GAAW,EAAE,IAAmB,EAAE,OAAoB,EAAE,MAAc;QACnF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YAC1B,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,sFAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;SACtF;QACD,OAAO,OAAO,CAAC;IACnB,CAAC;IAEM,OAAO,CAAC,OAAe,EAAE,IAAmB,EAAE,OAAmB;QACpE,oDAAoD;QACpD,IAAI,IAAY,CAAC;QACjB,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE,EAAE;YAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE,EAAE;gBAC9B,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;oBACzB,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;oBACpC,MAAM,aAAa,GAAW,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;oBAChD,MAAM,aAAa,GAAW,IAAI,CAAC,MAAM,GAAG,aAAa,GAAG,CAAC,CAAC;oBAC9D,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,aAAa,CAAC,CAAC,CAAC;oBAC9D,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,aAAa,CAAC,CAAC;oBACnC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,sFAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;oBAChD,sFAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBAChC;qBAAM;oBACH,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,sFAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBAChD;aACJ;SACJ;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,iBAAiB,CACpB,GAAW,EACX,KAAoB,EACpB,KAAoB,EACpB,IAAmB;QAEnB,IAAI,OAAO,GAAc,IAAI,sFAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC7C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;gBAC1B,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,sFAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;oBAC1B,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACvD,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;iBAEnD;aACJ;SACJ;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IA4BD,YAAY,CAAC,CAAS;QAClB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5B,CAAC;IAEM,cAAc,CAAC,IAAY,EAAE,IAAY,EAAE,aAAa,EAAE,iBAAiB;QAC9E,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE;YAC/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE;gBAC/B,IAAI,IAAI,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,EAAE;oBAC1B,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;iBACtC;qBAAM;oBACH,IAAI,WAAW,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,KAAK,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;oBAC1F,IAAK,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,KAAK,CAAC,EAAC;wBACvC,WAAW,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;qBAC/C;oBACD,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC;iBAC9C;aACJ;SACJ;QACD,OAAO,iBAAiB,CAAC;IAC7B,CAAC;IAEM,OAAO,CAAC,cAAc,GAAG,CAAC;QAC7B,gEAAgE;QAChE,OAAO,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,EAAC,sBAAsB;YACjE,KAAK,IAAI,CAAC,GAAG,GAAG,cAAc,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE;gBAC1E,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,KAAK,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE;oBAClF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;yBAC9D,gBAAgB,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;oBAC9D,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;wBACZ,MAAM,EAAE,aAAa;wBACrB,GAAG,EAAE,YAAY;wBACjB,KAAK,EAAE,IAAI,CAAC,UAAU;qBACzB,CAAC,CAAC;oBACH,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;wBAC7C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;oBACtF,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;wBACZ,MAAM,EAAE,aAAa;wBACrB,GAAG,EAAE,QAAQ;wBACb,KAAK,EAAE,IAAI,2FAAc,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,GAAG,CAAC;qBAC1D,CAAC,CAAC;iBAEN;qBAAM;oBACH,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,KAAK,IAAI,CAAC,YAAY,CAAC,SAAS;2BAC7E,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,KAAK,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE;wBAChG,yGAAyG;wBACzG,uCAAuC;wBACvC,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,SAAS,EAAE;4BAC3C,MAAM,GAAG,GAAG,IAAI,CAAC,cAAc,CAC1B,IAAI,CAAC,GAAG,EACT,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,EACnB,IAAI,CAAC,aAAa,EAClB,IAAI,yFAAY,CACZ,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;4BACnD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;gCACZ,MAAM,EAAE,wBAAwB;gCAChC,GAAG,EAAE,2BAA2B;gCAChC,KAAK,EAAE,IAAI,CAAC,GAAG;gCACf,UAAU,EAAE,GAAG;6BAElB,CAAC,CAAC;4BACH,OAAO;yBACV;wBAED,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBACxD,IAAI,CAAC,KAAK,EAAE,CAAC;wBACb,IAAI,CAAC,UAAU,CAAC,WAAW,GAAG,CAAC,CAAC;wBAChC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;4BAC7C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;wBACtF,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;4BACZ,MAAM,EAAE,aAAa;4BACrB,GAAG,EAAE,YAAY;4BACjB,KAAK,EAAE,IAAI,CAAC,UAAU;yBACzB,CAAC,CAAC;qBACN;yBAAM;wBACH,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,KAAK,IAAI,CAAC,YAAY,CAAC,SAAS;+BAC7E,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,KAAK,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE;4BAEhG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;gCACZ,MAAM,EAAE,gBAAgB;gCACxB,GAAG,EAAE,qBAAqB;gCAC1B,KAAK,EAAE,IAAI;6BACd,CAAC,CAAC;4BACH,OAAO;yBACV;qBACJ;iBACJ;gBACD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;gBAC1E,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE;oBAC/B,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,mBAAmB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;oBACjF,kGAAkG;iBACrG;gBAED,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE;oBACtC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;iBAChF;aAEJ;YACD,2EAA2E;YAC3E,cAAc,GAAG,CAAC,CAAC;SACtB;QACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;YACZ,MAAM,EAAE,iBAAiB;YACzB,GAAG,EAAE,cAAc;YACnB,KAAK,EAAE,IAAI,2FAAc,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,GAAG,CAAC;SAC1D,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;YACZ,MAAM,EAAE,iBAAiB;YACzB,GAAG,EAAE,cAAc;YACnB,KAAK,EAAE,IAAI,2FAAc,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,GAAG,CAAC;SAC1D,CAAC,CAAC;QAEH,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;QAC/F,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;YACZ,MAAM,EAAE,iBAAiB;YACzB,GAAG,EAAE,gBAAgB;YACrB,KAAK,EAAE,IAAI,2FAAc,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,GAAG,CAAC;SAC5D,CAAC,CAAC;IAGP,CAAC;IAEO,eAAe,CAAC,GAAW,EAAE,QAAa,IAAI;QAClD,MAAM,GAAG,GAAG,EAAE,CAAC;QACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YAC1B,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;gBAC1B,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACtB;SACJ;QACD,OAAO,GAAG,CAAC;IACf,CAAC;IAGO,SAAS,CAAC,GAAW,EAAE,QAAa,IAAI;QAC5C,MAAM,GAAG,GAAG,EAAE,CAAC;QACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YAC1B,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACnB;QACD,OAAO,GAAG,CAAC;IACf,CAAC;CACJ;;;;;;;;;;;;;ACnRD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'lu-decomposition-client';\n}\n","<app-lu-decomposition></app-lu-decomposition>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LuDecompositionComponent } from './lu-decomposition/lu-decomposition.component';\nimport {FormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LuDecompositionComponent\n  ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        FormsModule,\n      HttpClientModule\n    ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, OnInit} from '@angular/core';\nimport {DisplayItem, LuDecompService} from '../service/lu-decomp-service';\nimport {Subscription} from 'rxjs';\n\nexport class MatrixFraction {\n    data: Fractions[][];\n    dim: number;\n    constructor(data: Fractions[][], dim: number) {\n        this.data = data;\n        this.dim = dim;\n    }\n\n    public clone(): MatrixFraction {\n        const res = [];\n        for (let i = 0; i < this.dim; i++) {\n            res.push([]);\n            for (let j = 0; j < this.dim; j++) {\n                res[i].push(this.data[i][j].clone());\n            }\n        }\n        return new MatrixFraction(res, this.dim);\n    }\n}\n\nexport class MatrixNumber {\n    data: number[][];\n    dim: number;\n    constructor(data: number[][], dim: number) {\n        this.data = data;\n        this.dim = dim;\n    }\n\n}\nexport class MatrixString {\n    data: string[][];\n    dim: number;\n    constructor(data: string[][], dim: number) {\n        this.data = data;\n        this.dim = dim;\n    }\n\n}\n\n@Component({\n    selector: 'app-lu-decomposition',\n    templateUrl: './lu-decomposition.component.html',\n    styleUrls: ['./lu-decomposition.component.scss']\n})\nexport class LuDecompositionComponent implements OnInit {\n\n    dimension = 3;\n    data: MatrixNumber = new MatrixNumber([], 0);\n    results: DisplayItem[] = [];\n    luDecompService: LuDecompService;\n    private sub: Subscription;\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n        this.changeDimension();\n        this.testData();\n    }\n\n    changeDimension() {\n        this.data.data = [];\n        for (let i = 0; i < this.dimension; i++) {\n            const line = [];\n            for (let col = 0; col < this.dimension; col++) {\n                line.push(0);\n            }\n            this.data.data.push(line);\n        }\n    }\n\n    testData() {\n        this.data.data = [\n            [20, 5, 9],\n            [16, 4, 7],\n            [4, 1, 3]\n        ];\n    }\n\n    computeMat() {\n        this.results = [];\n        if (this.sub) {\n            this.sub.unsubscribe();\n        }\n        this.luDecompService = new LuDecompService(this.dimension, this.data);\n        this.sub = this.luDecompService.event.subscribe(eventData => {\n            console.log(eventData);\n            this.results.push(new DisplayItem(eventData));\n        });\n        this.luDecompService.compute();\n    }\n\n    changeInputParameter(item: DisplayItem) {\n        item.inputParameterSubmited = true;\n        this.luDecompService.addParameter(item.inputParameter);\n        const value: any = item.value;\n        this.luDecompService.compute(value);\n    }\n\n    indexTrackerLin(index: number, value: any) {\n        return index;\n    }\n    indexTrackerCol(index: number, value: any) {\n        return index;\n    }\n}\n\n\nexport class Fractions {\n    // a class is basically the blueprint of MY object that i plan to create\n    numerator: number;\n    denominator: number;\n\n    constructor(num: number, denom: number) {\n        this.numerator = num;\n        this.denominator = denom;\n    }\n\n    public static reduce(test: Fractions): Fractions {\n        // test is the fraction// do the 0 case\n        for (let i = Math.abs(test.denominator); i >= 1; i--) {\n            if (test.numerator % i === 0 && test.denominator % i === 0) {\n                test.numerator = test.numerator / i;\n                test.denominator = test.denominator / i;\n                break;\n            }\n        }\n        if (test.denominator < 0) {\n            test.numerator = test.numerator * -1;\n            test.denominator = test.denominator * -1;\n        }\n        return test;\n    }\n\n// from fracitons to that is the typescript conversion\n    public static _addingNoChange(test: Fractions, addFrac: Fractions): Fractions {\n        let temp1: number;\n        let temp2: number;\n        const result: Fractions = new Fractions(0, 1); // not sure if right\n        if (test.denominator === addFrac.denominator) {\n            result.numerator = test.numerator + addFrac.numerator;\n            result.denominator = test.denominator;\n        } else {\n            temp1 = test.denominator;\n            temp2 = addFrac.denominator;\n            test.denominator = temp1 * temp2;\n            addFrac.denominator = temp1 * temp2;\n            test.numerator = temp2 * test.numerator;\n            addFrac.numerator = temp1 * addFrac.numerator;\n            test.numerator = test.numerator + addFrac.numerator;\n            result.numerator = test.numerator;\n            result.denominator = test.denominator;\n        }\n        Fractions.reduce(result);\n        return result;\n    }\n\n    public static _subtracting(test: Fractions, subFrac: Fractions): Fractions {\n        let temp: number;\n        let temp2: number;\n        if (test.denominator === subFrac.denominator) {\n            test.numerator = test.numerator - subFrac.numerator;\n        } else {\n            temp = test.denominator;\n            temp2 = subFrac.denominator;\n            test.denominator = temp * temp2;\n            subFrac.denominator = temp * temp2;\n            test.numerator = temp2 * test.numerator;\n            subFrac.numerator = temp * subFrac.numerator;\n            test.numerator = test.numerator - subFrac.numerator;\n        }\n        Fractions.reduce(test);\n        return test;\n    }\n    public static _multiplyingNoChange(test: Fractions, multFrac: Fractions): Fractions {\n        const results: Fractions = new Fractions(0, 1);\n        results.numerator = test.numerator * multFrac.numerator;\n        results.denominator = test.denominator * multFrac.denominator;\n        Fractions.reduce(results);\n        return results;\n    }\n    public static _divisionNoChange(test: Fractions, divFrac: Fractions): Fractions {\n        const result: Fractions = new Fractions(0, 1);\n        result.numerator = test.numerator * divFrac.denominator;\n        result.denominator = test.denominator * divFrac.numerator;\n        Fractions.reduce(result);\n        return result;\n    }\n\n    public divisionNoChange(divFrac: Fractions): Fractions {\n        return Fractions._divisionNoChange(this, divFrac);\n    }\n    public multiplyingNoChange(multFrac: Fractions): Fractions {\n        return Fractions._multiplyingNoChange(this, multFrac);\n    }\n    public subtracting(subFrac: Fractions): Fractions {\n        return Fractions._subtracting(this, subFrac);\n    }\n    public addingNoChange(addFrac: Fractions): Fractions {\n        return Fractions._addingNoChange(this, addFrac);\n    }\n    public clone(): Fractions {\n        return new Fractions(this.numerator, this.denominator);\n    }\n}\n","<div>\n  <h5>Enter the value n in an nxn matrix</h5>\n  <input type=\"number\" [(ngModel)]=\"dimension\" (ngModelChange)=\"changeDimension()\"/>\n</div>\n\n<div>\n  <table>\n    <h5>Enter the matrix</h5>\n    <tr *ngFor=\"let line of data.data; let idxLine = index; trackBy:indexTrackerLin\">\n      <td *ngFor=\"let col of line; let idxCol = index; trackBy:indexTrackerCol\">\n        <input type=\"number\" [(ngModel)]=\"data.data[idxLine][idxCol]\"/>\n      </td>\n    </tr>\n  </table>\n</div>\n\n<button (click)=\"computeMat()\">\n  Compute\n</button>\n\n<h5>Result</h5>\n\n<div *ngFor=\"let item of results\">\n  <ng-container *ngIf=\"item.action == 'RequestParamForInfCase'\">\n    <ng-container *ngTemplateOutlet=\"askParameter, context: {item: item}\"></ng-container>\n  </ng-container>\n  <ng-container *ngIf=\"item.action == 'DisplaySolution'\">\n    <ng-container *ngIf=\"item.isMatrix()\">\n      <ng-container *ngTemplateOutlet=\"displayMatrix, context: {item: item}\"></ng-container>\n    </ng-container>\n    <ng-container *ngIf=\"item.isFractions()\">\n      <ng-container *ngTemplateOutlet=\"displayFractions, context: {item: item}\"></ng-container>\n    </ng-container>\n    <ng-container *ngIf=\"item.isNumber()\">\n      <ng-container *ngTemplateOutlet=\"displayNumber, context: {item: item}\"></ng-container>\n    </ng-container>\n  </ng-container>\n  <ng-container *ngIf=\"item.action == 'StopNoSolution'\">\n    <ng-container *ngTemplateOutlet=\"noSolution, context: {item: item}\"></ng-container>\n  </ng-container>\n\n</div>\n\n\n<ng-template #askParameter let-item=\"item\">\n  <ng-container *ngTemplateOutlet=\"displayStringMatrix, context: {item: item.requestMat}\"></ng-container>\n  <div>\n    {{item.msg}}\n  </div>\n  <div>\n    <input type=\"number\"  [(ngModel)]=\"item.inputParameter\" [disabled]=\"item.inputParameterSubmited\"/>\n  </div>\n  <button (click)=\"changeInputParameter(item)\" *ngIf=\"!item.inputParameterSubmited && (item.inputParameter  || item.inputParameter == 0)\">\n    Submit\n  </button>\n</ng-template>\n\n<ng-template #displayMatrix let-item=\"item\">\n  <div>\n    {{item.action}}  - {{item.msg}}\n  </div>\n  <table>\n    <tr *ngFor=\"let line of item.value.data; let idxLine = index\">\n      <td *ngFor=\"let col of line; let idxCol = index\">\n        {{item.value.data[idxLine][idxCol].numerator}}\n        <ng-container *ngIf=\"item.value.data[idxLine][idxCol].denominator != 1.0\">\n          / {{item.value.data[idxLine][idxCol].denominator}}\n        </ng-container>\n      </td>\n    </tr>\n  </table>\n\n</ng-template>\n\n<ng-template #displayStringMatrix let-item=\"item\">\n\n  <table>\n    <tr *ngFor=\"let line of item.data; let idxLine = index\">\n      <td *ngFor=\"let col of line; let idxCol = index\">\n        {{item.data[idxLine][idxCol]}}\n\n      </td>\n    </tr>\n  </table>\n\n</ng-template>\n\n<ng-template #displayNumber let-item=\"item\">\n  <div>\n    {{item.msg}}\n  </div>\n  <div>\n    {{item.value}}\n  </div>\n\n</ng-template>\n\n<ng-template #displayFractions let-item=\"item\">\n  <div>\n    {{item.msg}}\n  </div>\n  <div>\n    {{item.value.numerator}}\n    <ng-container *ngIf=\"item.value.denominator != 1\">\n      / {{item.value.denominator}}\n    </ng-container>\n  </div>\n</ng-template>\n\n<ng-template #noSolution let-item=\"item\">\n  <div>\n    {{item.msg}}\n  </div>\n</ng-template>\n","import {Fractions, MatrixFraction, MatrixNumber, MatrixString} from '../lu-decomposition/lu-decomposition.component';\nimport {EventEmitter} from '@angular/core';\n\ntype EventData = {\n    action: 'RequestParamForInfCase' | 'DisplayStep' | 'StopNoSolution' | 'DisplaySolution',\n    msg: string,\n    value: MatrixFraction | number | Fractions | MatrixString;\n    requestMat?: MatrixString;\n};\n\nexport class DisplayItem {\n    action: 'RequestParamForInfCase' | 'DisplayStep' | 'StopNoSolution' | 'DisplaySolution';\n    msg: string;\n    value: MatrixFraction | number | Fractions | MatrixString;\n    inputParameter: number;\n    inputParameterSubmited = false;\n    requestMat?: MatrixString = null;\n\n    constructor(value: EventData) {\n        this.action = value.action;\n        this.msg = value.msg;\n        if (value.value instanceof MatrixFraction) {\n            this.value = value.value.clone();\n        } else if (value.value instanceof MatrixFraction) {\n            this.value = value.value.clone();\n        } else {\n            this.value = value.value;\n        }\n        this.requestMat = value.requestMat;\n    }\n\n    isMatrix() {\n        return this.value instanceof MatrixFraction;\n    }\n\n    isFractions() {\n        return this.value instanceof Fractions;\n    }\n\n    isNumber() {\n        return typeof this.value === 'number';\n    }\n}\n\nexport class LuDecompService {\n\n    event: EventEmitter<EventData> = new EventEmitter<EventData>();\n\n\n    fractionZero: Fractions = new Fractions(0, 1);\n    fractionInput: Fractions[][];\n    fractionLower: Fractions[][];\n    fractionProduct: Fractions[][];\n    fractionCopy: Fractions[];\n    parameters: number[] = [];\n    index = 0;\n    private multiplier: Fractions;\n    private lin = 0;\n    private col = 0;\n\n    public copyArray(dim: number, arr1: Fractions[][], arrcopy: Fractions[], numrow: number): Fractions[] {\n        for (let i = 0; i < dim; i++) {\n            arrcopy[i] = new Fractions(arr1[numrow][i].numerator, arr1[numrow][i].denominator);\n        }\n        return arrcopy;\n    }\n\n    public convert(arrsize: number, test: Fractions[][], numbers: number[][]): Fractions[][] {\n        // make this do teh entire array and return an array\n        let num2: number;\n        let text = '';\n        for (let i = 0; i < arrsize; i++) {\n            for (let j = 0; j < arrsize; j++) {\n                if (numbers[i][j] % 1 !== 0) {\n                    text = Math.abs(numbers[i][j]) + '';\n                    const integerPlaces: number = text.indexOf('.');\n                    const decimalPlaces: number = text.length - integerPlaces - 1;\n                    numbers[i][j] = numbers[i][j] * (Math.pow(10, decimalPlaces));\n                    num2 = Math.pow(10, decimalPlaces);\n                    test[i][j] = new Fractions(numbers[i][j], num2);\n                    Fractions.reduce(test[i][j]);\n                } else {\n                    test[i][j] = new Fractions(numbers[i][j], 1);\n                }\n            }\n        }\n        return test;\n    }\n\n    public multiplyTwoMatrix(\n        dim: number,\n        lower: Fractions[][],\n        upper: Fractions[][],\n        test: Fractions[][]): Fractions[][] {\n\n        let testing: Fractions = new Fractions(0, 1);\n        for (let i = 0; i < dim; i++) {\n            for (let j = 0; j < dim; j++) {\n                test[i][j] = new Fractions(0, 1);\n                for (let k = 0; k < dim; k++) {\n                    testing = lower[i][k].multiplyingNoChange(upper[k][j]);\n                    test[i][j] = test[i][j].addingNoChange(testing);\n\n                }\n            }\n        }\n        return test;\n    }\n\n    constructor(private dim: number, private input: MatrixNumber) {\n        this.fractionZero = new Fractions(0, 1);\n        this.fractionInput = this.initDoubleArray(dim);\n        this.fractionLower = this.initDoubleArray(dim);\n        this.fractionProduct = this.initDoubleArray(dim);\n        this.fractionCopy = this.initArray(dim); // takes one row from the row to perform gaussian\n        this.parameters = [];\n        this.index = 0;\n\n        this.fractionInput = this.convert(this.dim, this.fractionInput, this.input.data);\n        // made fraction form of array c\n        this.event.emit({\n            action: 'DisplayStep',\n            msg: ' Upper',\n            value: new MatrixFraction(this.fractionInput, this.dim)\n        });\n        const lower: number[][] = this.initDoubleArray(this.dim, 0);\n        for (let i = 0; i < dim; i++) {\n            lower[i][i] = 1;\n        }\n\n        this.fractionLower = this.convert(this.dim, this.fractionLower, lower); // making lower fraction\n        this.multiplier = new Fractions(1, 1);\n    }\n\n\n    addParameter(p: number) {\n        this.parameters.push(p);\n    }\n\n    public infiniteString(xPos: number, yPos: number, fractionLower, infiniteSolString) {\n        for (let i = 0; i < this.dim; i++) {\n            for (let j = 0; j < this.dim; j++) {\n                if (xPos === j && yPos === i) {\n                    infiniteSolString.data[i][j] = 't';\n                } else {\n                    let fractionStr = fractionLower[i][j].numerator + ' / ' + fractionLower[i][j].denominator;\n                    if ( fractionLower[i][j].denominator === 1){\n                        fractionStr = fractionLower[i][j].numerator;\n                    }\n                    infiniteSolString.data[i][j] = fractionStr;\n                }\n            }\n        }\n        return infiniteSolString;\n    }\n\n    public compute(oldColPosition = 1) {\n        // adjusting A(1,1), A(2,1) in the matrix L and U using gaussian\n        for (; this.lin < (this.dim - 1); this.lin++) {// a represents column\n            for (this.col = oldColPosition; this.col < (this.dim - this.lin); this.col++) {\n                if (this.fractionInput[this.lin][this.lin].numerator !== this.fractionZero.numerator) {\n                    this.multiplier = this.fractionInput[this.col + this.lin][this.lin]\n                        .divisionNoChange(this.fractionInput[this.lin][this.lin]);\n                    this.event.emit({\n                        action: 'DisplayStep',\n                        msg: 'Multiplier',\n                        value: this.multiplier\n                    });\n                    this.fractionLower[this.col + this.lin][this.lin] =\n                        this.fractionLower[this.col + this.lin][this.lin].addingNoChange(this.multiplier);\n                    this.event.emit({\n                        action: 'DisplayStep',\n                        msg: ' Lower',\n                        value: new MatrixFraction(this.fractionLower, this.dim)\n                    });\n\n                } else {\n                    if (this.fractionInput[this.lin][this.lin].numerator === this.fractionZero.numerator\n                        && this.fractionInput[this.col + this.lin][this.lin].numerator === this.fractionZero.numerator) {\n                        // System.out.println(\"please pick a parameterCompute for the matrix since there is infinite solutions\");\n                        //  parameterCompute = input.nextInt();\n                        if (this.parameters[this.index] === undefined) {\n                            const mat = this.infiniteString(\n                                 this.lin,\n                                this.col + this.lin,\n                                this.fractionLower,\n                                new MatrixString(\n                                    this.initDoubleArray(this.dim), this.dim));\n                            this.event.emit({\n                                action: 'RequestParamForInfCase',\n                                msg: 'Please Input Parameter t ',\n                                value: this.col,\n                                requestMat: mat\n\n                            });\n                            return;\n                        }\n\n                        this.multiplier.numerator = this.parameters[this.index];\n                        this.index++;\n                        this.multiplier.denominator = 1;\n                        this.fractionLower[this.col + this.lin][this.lin] =\n                            this.fractionLower[this.col + this.lin][this.lin].addingNoChange(this.multiplier);\n                        this.event.emit({\n                            action: 'DisplayStep',\n                            msg: 'Multiplier',\n                            value: this.multiplier\n                        });\n                    } else {\n                        if (this.fractionInput[this.lin][this.lin].numerator === this.fractionZero.numerator\n                            && this.fractionInput[this.col + this.lin][this.lin].numerator !== this.fractionZero.numerator) {\n\n                            this.event.emit({\n                                action: 'StopNoSolution',\n                                msg: 'No LU decomposition',\n                                value: null\n                            });\n                            return;\n                        }\n                    }\n                }\n                this.copyArray(this.dim, this.fractionInput, this.fractionCopy, this.lin);\n                for (let j = 0; j < this.dim; j++) {\n                    this.fractionCopy[j] = this.fractionCopy[j].multiplyingNoChange(this.multiplier);\n                    // copies all the number in the row into a copy matrix which will be used in gaussian elimnination\n                }\n\n                for (let j = this.lin; j < this.dim; j++) {\n                    this.fractionInput[this.col + this.lin][j].subtracting(this.fractionCopy[j]);\n                }\n\n            }\n            // if resuming a compute, after the the resume set the column to start at 1\n            oldColPosition = 1;\n        }\n        this.event.emit({\n            action: 'DisplaySolution',\n            msg: ' Lower Final',\n            value: new MatrixFraction(this.fractionLower, this.dim)\n        });\n        this.event.emit({\n            action: 'DisplaySolution',\n            msg: ' Upper Final',\n            value: new MatrixFraction(this.fractionInput, this.dim)\n        });\n\n        this.multiplyTwoMatrix(this.dim, this.fractionLower, this.fractionInput, this.fractionProduct);\n        this.event.emit({\n            action: 'DisplaySolution',\n            msg: ' Lower x Upper',\n            value: new MatrixFraction(this.fractionProduct, this.dim)\n        });\n\n\n    }\n\n    private initDoubleArray(dim: number, value: any = null): any[][] {\n        const res = [];\n        for (let i = 0; i < dim; i++) {\n            res.push([]);\n            for (let j = 0; j < dim; j++) {\n                res[i].push(value);\n            }\n        }\n        return res;\n    }\n\n\n    private initArray(dim: number, value: any = null): any[] {\n        const res = [];\n        for (let i = 0; i < dim; i++) {\n            res.push(value);\n        }\n        return res;\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}